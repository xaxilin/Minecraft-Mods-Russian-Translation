name: Альфа-выпуск русификатора

on:
  push:
    branches:
      - alpha
    paths:
      - 'Набор ресурсов/1.7/**'
      - 'Набор ресурсов/1.12/**'
      - 'Набор ресурсов/1.14/**'
      - 'Набор ресурсов/1.15/**'
      - 'Набор ресурсов/1.16/**'
      - 'Набор ресурсов/1.17/**'
      - 'Набор ресурсов/1.18/**'
      - 'Набор ресурсов/1.19/**'
      - 'Набор ресурсов/1.20/**'
      - 'Набор ресурсов/1.21/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        version:
          - '1.7'
          - '1.12'
          - '1.14'
          - '1.15'
          - '1.16'
          - '1.17'
          - '1.18'
          - '1.19'
          - '1.20'
          - '1.21'

    steps:
      - name: Проверка, есть ли изменения в версии ${{ matrix.version }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Получение изменённых файлов
        id: changed_files
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          echo "::set-output name=files::$(cat changed_files.txt)"

      - name: Определение, изменена ли версия
        id: version_changed
        run: |
          if grep -q "Набор ресурсов/${{ matrix.version }}/" changed_files.txt; then
            echo "Changes detected in version ${{ matrix.version }}"
            echo "::set-output name=changed::true"
          else
            echo "No changes in version ${{ matrix.version }}"
            echo "::set-output name=changed::false"
            exit 0
          fi

      - name: Клонирование репозитория
        uses: actions/checkout@v3

      - name: Установка Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Установка зависимостей Python
        run: pip install gspread oauth2client requests

      - name: Установка утилиты ZIP
        run: sudo apt-get install -y zip

      - name: Проверка последнего выпуска для версии ${{ matrix.version }}
        id: get_latest_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ matrix.version }}';
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });

            const versionReleases = releases.data.filter(release => release.tag_name.startsWith(`${version}-`));
            let latestRelease = null;

            if (versionReleases.length > 0) {
              latestRelease = versionReleases.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))[0];
            }

            let nextAlpha = 1;
            let nextBeta = 1;
            let nextCandidate = 1;
            let nextMajor = 1;
            let nextMinor = 0;
            let nextPatch = 0;

            if (latestRelease) {
              const tag = latestRelease.tag_name;
              const regex = new RegExp(`^${version}-(\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:-C(\\d+))?(?:-B(\\d+))?(?:-A(\\d+))?$`);
              const match = tag.match(regex);

              if (match) {
                nextMajor = parseInt(match[1]);
                nextMinor = parseInt(match[2]);
                nextPatch = parseInt(match[3] || '0');
                nextCandidate = parseInt(match[4] || '1');
                nextBeta = parseInt(match[5] || '1');
                nextAlpha = parseInt(match[6] || '0') + 1;
              }
            }

            const tagName = `${version}-${nextMajor}.${nextMinor}${nextPatch > 0 ? `.${nextPatch}` : ''}-C${nextCandidate}-B${nextBeta}-A${nextAlpha}`;

            core.setOutput('next_major', nextMajor);
            core.setOutput('next_minor', nextMinor);
            core.setOutput('next_patch', nextPatch);
            core.setOutput('next_candidate', nextCandidate);
            core.setOutput('next_beta', nextBeta);
            core.setOutput('next_alpha', nextAlpha);
            core.setOutput('tag_name', tagName);
            core.setOutput('previous_tag', latestRelease ? latestRelease.tag_name : '');

      - name: Генерация списка изменений
        id: generate_release_notes
        run: |
          echo "Примечания к выпуску для версии ${{ steps.get_latest_release.outputs.tag_name }}" > release_notes.txt
          echo "Изменения в версии ${{ matrix.version }}:" >> release_notes.txt
          git log --oneline ${{ steps.get_latest_release.outputs.previous_tag }}..${{ github.sha }} -- "Набор ресурсов/${{ matrix.version }}/" >> release_notes.txt

      - name: Создание архива выпуска для версии ${{ matrix.version }}
        run: |
          cd "Набор ресурсов/${{ matrix.version }}"
          zip -r "../../Rus-For-Mods-${{ matrix.version }}-${{ steps.get_latest_release.outputs.tag_name }}.zip" assets dynamicmcpack.json pack.mcmeta respackopts.json5
          cd ../../
          zip -j -g "Rus-For-Mods-${{ matrix.version }}-${{ steps.get_latest_release.outputs.tag_name }}.zip" "Набор ресурсов/pack.png" "Набор ресурсов/peruse_or_bruise.txt"

      - name: Создание тега для версии ${{ matrix.version }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "${{ steps.get_latest_release.outputs.tag_name }}"
          git push origin "${{ steps.get_latest_release.outputs.tag_name }}"

      - name: Создание выпуска для версии ${{ matrix.version }}
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: release_notes.txt
          tag_name: ${{ steps.get_latest_release.outputs.tag_name }}
          name: "${{ steps.get_latest_release.outputs.next_alpha }}-я альфа для MC ${{ matrix.version }}"
          draft: false
          prerelease: true

      - name: Загрузка артефакта в выпуск
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./Rus-For-Mods-${{ matrix.version }}-${{ steps.get_latest_release.outputs.tag_name }}.zip"
          asset_name: "Rus-For-Mods-${{ matrix.version }}-${{ steps.get_latest_release.outputs.tag_name }}.zip"
          asset_content_type: application/zip

      - name: Публикация на Modrinth и CurseForge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: 374772
          curseforge-token: ${{ secrets.CF_API_KEY }}
          modrinth-id: GsoCvyCO
          modrinth-featured: false
          modrinth-token: ${{ secrets.MODRINTH_API_KEY }}
          files: |
            ./Rus-For-Mods-${{ matrix.version }}-${{ steps.get_latest_release.outputs.tag_name }}.zip
          name: "${{ steps.get_latest_release.outputs.next_alpha }}-я альфа для MC ${{ matrix.version }}"
          version: "${{ steps.get_latest_release.outputs.tag_name }}"
          version-type: alpha
          changelog: |
            Это альфа-версия русификатора для модов Minecraft ${{ matrix.version }}.

            Если вы обнаружите ошибки в этой версии, пожалуйста, сообщите об этом!
          loaders: minecraft
          game-versions: |
            >=${{ matrix.version }} <$(echo "${{ matrix.version }} + 0.1" | bc)
          game-version-filter: releases
          dependencies: |
            dynamicpack(optional){modrinth:IT6fZgjc}#(ignore:github)
            respackopts(optional){modrinth:TiF5QWZY}{curseforge:430090}#(ignore:github)